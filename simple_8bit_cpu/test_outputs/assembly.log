=== ASSEMBLY PROCESS ===
Line  4: MOV R0, #2      // R0 = 2 â†’ 10100110 â†’ 0xA6 (op:101 dest:00 src:110)
Line  5: MOV R1, #3      // R1 = 3 â†’ 10101111 â†’ 0xAF (op:101 dest:01 src:111)
Line  6: MOV R2, #0      // R2 = 0 â†’ 10110100 â†’ 0xB4 (op:101 dest:10 src:100)
Line  7: MOV R3, #1      // R3 = 1 â†’ 10111101 â†’ 0xBD (op:101 dest:11 src:101)
Line 19: NOT R3          // R3 = ~1 = 0xFE â†’ 11111000 â†’ 0xF8 (op:111 dest:11 src:000)
Line 22: CMP R1, R3      // Compare R1(0) vs R3(0xFE) -> zero_flag = 0 â†’ 11001011 â†’ 0xCB (op:110 dest:01 src:011)
Line 23: JZ 3            // Should NOT jump since zero_flag=0 â†’ 10011011 â†’ 0x9B (op:100 dest:11 src:011)
Line 24: MOV R0, #3      // Final result â†’ 10100111 â†’ 0xA7 (op:101 dest:00 src:111)
Line 25: JMP 3           // Jump to halt loop at PC=3 â†’ 01111011 â†’ 0x7B (op:011 dest:11 src:011)

Generated 9 instructions

=== MANUAL VERIFICATION ===
âœ“ MOV R1, #1   â†’ 10101101 (expected: 10101101)
âœ“ MOV R2, R1   â†’ 10110001 (expected: 10110001)
âœ“ ADD R1, R2   â†’ 00001010 (expected: 00001010)
âœ“ MUL R2, R1   â†’ 00110001 (expected: 00110001)
âœ“ JMP 7        â†’ 01111111 (expected: 01111111)
âœ“ JZ 3         â†’ 10011011 (expected: 10011011)
âœ“ CMP R1, R2   â†’ 11001010 (expected: 11001010)

âœ… Assembly completed! Generated instruction_memory.v with 9 instructions
ðŸ“„ Hex dump: A6 AF B4 BD F8 CB 9B A7 7B
